// let a = 1;
// console.log("a => ", a);
// let b = ++a;
// console.log("b => ", b);
// console.log("a again => ", a);
// let c = ++a;
// console.log("c => ", c);
// // what is the value of a, b, and c?

// let d = "hello";
// let e = false;

// let incrementD = d++;
// console.log(incrementD);
// let incrementE = ++e;
// console.log(incrementE);

// let perplexed; // perplexed is undefined (no value is assigned)
// let perplexed2 = perplexed + 2;
// console.log(perplexed2);

// let price = 2.7;
// let priceFixed = parseFloat(price).toFixed(2);
// console.log(priceFixed);

// console.log(isNaN());

// let firstName = "false";
// if (firstName) {
//     let message = `Hello, ${firstName}`;
// }

let sample = "Hello Codeup";

// Use .length to find the number of characters in the string.
let sampleLength = sample.length;
console.log(`sample length is: ${sampleLength}`);
// Try to make the sample string all upper or all lower case.
let sampleUpper = sample.toUpperCase();
console.log(`sample as uppercase: ${sampleUpper}`);
// Update (Re-assign) the variable sample via concatenation so that it contains "Hello Codeup Students".
sample += " Students";
console.log(`Reassigned sample is: ${sample}`);
// Replace "Students" with "Class".
sample = sample.replace("Students", "Class");
console.log(`sample with replace method: ${sample}`);
// Find the index of "c" using .indexOf(). What do you observe?
let indexOfLowercaseC = sample.indexOf("c");
let foundLowercaseC = indexOfLowercaseC >= 0; // did it find it or not?!
let alsoFoundLowercaseC = sample.includes("c");
console.log(`Lowercase "c" indexOf => ${indexOfLowercaseC}`);
// Find the index of "C" using .indexOf().
let indexOfUppercaseC = sample.indexOf("Codeup");
// Retrieve a substring that contains only the word "Codeup" by using indexOf() and substring().
let codeupLength = "codeup".length;
let codeupEnd = indexOfUppercaseC + codeupLength;
let codeupWord = sample.substring(indexOfUppercaseC, codeupEnd);

// let codeupWord = sample.split(" ")[1];
console.log(sample.substring(sample.indexOf("Codeup"), indexOfUppercaseC + "codeup".length));